<problem>
Create a method `returnOdd(nums:List[int]) -> List[int]` that accepts a list `nums`. It should filter out all the even integers from the list `nums` and return a new list that contains only the odd integers from the original list.

## Example Cases:
```
returnOdd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) => [1, 3, 5, 7, 9]
returnOdd([2, 4, 6, 8, 10]) => []
returnOdd([1, 3, 5, 7, 9]) => [1, 3, 5, 7, 9]
returnOdd([-76, -92, 9, -1, 7, 10]) => [9, -1, 7]
```
</problem>
<bug_code>
1. def returnOdd(nums):
2.  newNums = []
3.  for i in nums:
4.    if i / 2 != 0:
5.      newNums.append(i)
6.  return newNums
</bug_code>
<bug_desc>
On line 4, the function checks if `i` divided by `2` is not equal to `0` which is true for `i > 0 and i < 0`. Consequently, the function removes all elements equal to `0` in `nums` instead of removing all elements that are divisible by `2`.
</bug_desc>
<bug_fixes>
Replace `/` with `%` on line 4.
</bug_fixes>
<unit_tests>
assert returnOdd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [1, 3, 5, 7, 9]
assert returnOdd([2, 4, 6, 8, 10]) == []
assert returnOdd([1, 3, 5, 7, 9]) == [1, 3, 5, 7, 9]
assert returnOdd([-76, -92, 9, -1, 7, 10]) == [9, -1, 7]
</unit_tests>
<stu_desc>

</stu_desc>
<dialogue>
User: I have a problem with my code. It's just not working, and I just don't know why.
Assistant: Can you explain what the issue appears to be?
	<alt>Can you walk me through your function line by line?
	<alt>Does your code throw an error or do you just get the wrong answer?
	<alt>Let's start with a simple warm-up question. How do you check if a number is even?
	<alt>Let's start with a simple warm-up question. How do you know if a number is even or odd?
User: The code does not throw an error, but it doesn't give the right answers. Most lists I input stay the same. Even numbers are not removed.
	<alt>It doesn't seem like my function modifies anything on most input lists.
	<alt>I can't figure out why my function doesn't remove most of the even numbers in the lists I input.
Assistant: Do you observe any patterns in the outputs of your function or is it always returning a list identical to the input?
	<alt>Can you explain your function to me line by line?
	<alt>It seems that you're instantiating a new list `newNums`, appending elements to it, and then returning it. What would cause `newNums` to be identical to `nums`?
User: For example, the input list `[0,2,3]` will return `[2,3]`, but many other inputs result in unchanged outputs.
	<alt>I seem to only remove 0s from my lists
	<alt>Running `returnOdd([2, 4, 6, 8, 10])` gives the same list back, for example
Assistant: Can you explain what your if-statement on line 4 is doing? Let's assume `i` is 4.
	<alt>How do you check if a number is even in your code?
	<alt>Let's review the Python documentation for arithmetic operations. Are you using the right operator to check if a number is even?
User: In the case before, we can look at 0 first. `0 / 2` is 0, so we get False on line 4 and do not append. For `4 / 2` is equal to `2`, it looks like I'm not getting what I want. Line 4 gives True, so we still append. That's not what I want though.
Assistant: It looks like just dividing isn't doing what you want. Is there another operator that can test whether a number is divisible by another? Feel free to reference the documentation.
	<alt>Let's review the Python documentation for arithmetic operations. Are you using the right operator to check if a number is even?
	<alt>Where can you learn more about arithmetic operators in Python?
User: Looking at the documentation, it seems like I can use a `%` to test whether the number is even. I'll try that.
<code>
1. def returnOdd(nums):
2.  newNums = []
3.  for i in nums:
4.    if i % 2 != 0:
5.      newNums.append(i)
6.  return newNums

</code>
Assistant: Looks like it works!
User: Thanks for your help!
</dialogue>