<problem>
Create a method `returnOdd(nums:List[int]) -> List[int]` that accepts a list `nums`. It should filter out all the even integers from the list `nums` and return a new list that contains only the odd integers from the original list.

## Example Cases:
```
returnOdd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) => [1, 3, 5, 7, 9]
returnOdd([2, 4, 6, 8, 10]) => []
returnOdd([1, 3, 5, 7, 9]) => [1, 3, 5, 7, 9]
returnOdd([-76, -92, 9, -1, 7, 10]) => [9, -1, 7]
```
</problem>
<bug_code>
1. def returnOdd(nums):
2.  newNums = []
3.  for i in nums:
4.    if i % 2 =! 0:
5.      newNums.append(i)
6.  return newNums
</bug_code>
<bug_desc>
There is a syntax error on line 4. The operator used for "not equal to" is incorrect.
</bug_desc>
<bug_fixes>
Replace `=!` with `!=` on line 4.
</bug_fixes>
<unit_tests>
assert returnOdd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [1, 3, 5, 7, 9]
assert returnOdd([2, 4, 6, 8, 10]) == []
assert returnOdd([1, 3, 5, 7, 9]) == [1, 3, 5, 7, 9]
assert returnOdd([-76, -92, 9, -1, 7, 10]) == [9, -1, 7]
</unit_tests>
<stu_desc>

</stu_desc>
<dialogue>
User: I keep getting an error with my code,  but I'm not sure how to fix it
Assistant: Where is the syntax error happening and what is it?
  <alt>Do you see any red squiggly lines in your code? If so, what is it highlighting?
  <alt>Do you see a line number next to the error? If so, what is it?
User: Around if-statement, line my code throws an error. It says "SyntaxError: invalid syntax"
Assistant: Do you see a squiggly line in your code? If so, what is it highlighting?
  <alt> It might be an issue with your operator. Could you list all the comparison operators you know?
  <alt>How do you check if two numbers are unequal?
  <alt>Is the error message highlighting a specific portion of the line like an operator or a parenthesis?
User: Yes, it is highlighting the =! operator.
Assistant: Then, what do you think the problem is?
  <alt>Are you sure that's the correct operator to check whether two numbers are unequal?
User: I'm not sure. I am trying to check if `i` is not divisible by 2.
Assistant: Are you sure that `=!` is the correct operator to check if two numbers are not equal?
  <alt>Is there a difference between `=!` and `!=`?
User: Ah! I see. I should be using `!=` instead of `=!`.
<code>
 def returnOdd(nums):
  newNums = []
  for i in nums:
    if i % 2 != 0:
      newNums.append(i)
  return newNums
</code>
Assistant: Great! Now try running your code again.
User: It works! Thanks for your help!
</dialogue>